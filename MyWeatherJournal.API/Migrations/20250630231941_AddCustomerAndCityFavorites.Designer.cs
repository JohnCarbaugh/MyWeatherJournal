// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

using MyWeatherJournal.API.Data;

namespace MyWeatherJournal.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250630231941_AddCustomerAndCityFavorites")]
    partial class AddCustomerAndCityFavorites
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyWeatherJournal.API.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "US",
                            Name = "Tulsa",
                            State = "OK"
                        },
                        new
                        {
                            Id = 2,
                            Country = "US",
                            Name = "Gulf Breeze",
                            State = "FL"
                        },
                        new
                        {
                            Id = 3,
                            Country = "US",
                            Name = "Albany",
                            State = "NY"
                        },
                        new
                        {
                            Id = 4,
                            Country = "US",
                            Name = "Sacramento",
                            State = "CA"
                        },
                        new
                        {
                            Id = 5,
                            Country = "US",
                            Name = "Seattle",
                            State = "WA"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
